name: Build Windows EXE (one-folder, no-UPX)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Install ffmpeg (runtime for test)
        shell: powershell
        run: choco install ffmpeg -y

      - name: Create version file
        shell: powershell
        run: |
          @"
# UTF-8
VSVersionInfo(
  ffi=FixedFileInfo(
    filevers=(1, 0, 0, 0),
    prodvers=(1, 0, 0, 0),
    mask=0x3f,
    flags=0x0,
    OS=0x40004,
    fileType=0x1,
    subtype=0x0,
    date=(0, 0)
  ),
  kids=[
    StringFileInfo([
      StringTable(
        '040904b0',
        [
          StringStruct('CompanyName', 'Gabriel Golker'),
          StringStruct('FileDescription', 'YouTube → MP4 + MP3/WAV GUI'),
          StringStruct('FileVersion', '1.0.0'),
          StringStruct('InternalName', 'yt_mp4_to_audio'),
          StringStruct('LegalCopyright', '© 2025 Gabriel Golker'),
          StringStruct('OriginalFilename', 'yt_mp4_to_audio.exe'),
          StringStruct('ProductName', 'StreamToAudio'),
          StringStruct('ProductVersion', '1.0.0'),
        ]
      )
    ]),
    VarFileInfo([VarStruct('Translation', [1033, 1200])])
  ]
)
"@ | Out-File -Encoding utf8 version_info.txt

      - name: Build (PyInstaller one-folder/no-UPX, icon required)
        shell: powershell
        run: |
          if (-not (Test-Path "./assets/app.ico")) {
            Write-Error "Falta ./assets/app.ico"
            exit 1
          }
          # one-folder, sin UPX, icono y version info
          pyinstaller app.py `
            --noconfirm --windowed `
            --icon "./assets/app.ico" `
            --noupx `
            --version-file version_info.txt `
            --add-data "assets/app.png;assets" `
            --distpath "dist" --workpath "build"
          Write-Host "Built files:"
          Get-ChildItem -Recurse dist

      - name: Upload artifact (folder build)
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

