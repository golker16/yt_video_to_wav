name: Build Windows EXE (onedir + real ffmpeg bundled)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Check icon exists
        shell: powershell
        run: |
          if (-not (Test-Path ".\assets\app.ico")) {
            Write-Error "Falta .\assets\app.ico en la raíz del repo."
            exit 1
          }
          $ico = Get-Item ".\assets\app.ico"
          Write-Host ("Icono: {0} ({1} bytes)" -f $ico.FullName, $ico.Length)

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        shell: powershell
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build (PyInstaller onedir, icon required)
        shell: powershell
        run: |
          $icoAbs = (Resolve-Path ".\assets\app.ico").Path
          $appAbs = (Resolve-Path ".\app.py").Path
          pyinstaller `
            --noconfirm `
            --windowed `
            --onedir `
            --noupx `
            --icon "$icoAbs" `
            --collect-all PySide6 `
            --collect-all shiboken6 `
            --add-data "assets\app.png;assets" `
            "$appAbs"
          Write-Host "Built files:"
          Get-ChildItem -Recurse .\dist

      # Copia el binario REAL de ffmpeg (no el shim de Chocolatey) dentro de dist\<app>\
      - name: Bundle real ffmpeg.exe into dist
        shell: powershell
        run: |
          choco install ffmpeg -y
          $shim = (Get-Command ffmpeg).Source
          $shimDir = Split-Path $shim -Parent
          # Candidato real típico de Chocolatey:
          $tryBin = Resolve-Path (Join-Path $shimDir "..\lib\ffmpeg\tools\ffmpeg\bin") -ErrorAction SilentlyContinue
          if ($tryBin) { $bin = $tryBin.Path } else { $bin = $shimDir }
          $ff = Join-Path $bin "ffmpeg.exe"
          $ffprobe = Join-Path $bin "ffprobe.exe"
          if (-not (Test-Path $ff)) {
            # fallback: por si el shim ya apunta al real
            $ff = $shim
          }
          if (-not (Test-Path $ff)) {
            Write-Error "No se encontró el binario real de ffmpeg."
            exit 1
          }
          $distDir = (Get-ChildItem -Directory .\dist | Select-Object -First 1).FullName
          Copy-Item $ff (Join-Path $distDir 'ffmpeg.exe') -Force
          if (Test-Path $ffprobe) {
            Copy-Item $ffprobe (Join-Path $distDir 'ffprobe.exe') -Force
          }
          & (Join-Path $distDir 'ffmpeg.exe') -version

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist


