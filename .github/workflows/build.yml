name: Build Windows EXE

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true          # por si el .ico está en Git LFS

      - name: Debug paths
        shell: powershell
        run: |
          Write-Host "PWD:" (Get-Location)
          Write-Host "Lista nivel 2:"
          Get-ChildItem -Depth 2 | ForEach-Object { $_.FullName }
          Write-Host "`nBuscar app.ico:"
          $ico = Get-ChildItem -Recurse -Filter app.ico | Select-Object -First 1
          if ($null -eq $ico) {
            Write-Error "No se encontró app.ico en el repo."
            exit 1
          } else {
            Write-Host "Encontrado:" $ico.FullName
          }

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Install ffmpeg (runtime)
        shell: powershell
        run: choco install ffmpeg -y

      - name: Build (PyInstaller, icono obligatorio)
        shell: powershell
        run: |
          if (-not (Test-Path "./assets/app.ico")) {
            Write-Error "El icono ./assets/app.ico no existe en la raíz del repo."
            exit 1
          }
          $icoAbs = (Resolve-Path "./assets/app.ico").Path
          $appAbs = (Resolve-Path "./app.py").Path
          Write-Host "Usando icono:" $icoAbs
          Write-Host "Script:" $appAbs
          pyinstaller --noconfirm --onefile --windowed --icon "$icoAbs" "$appAbs"
          Write-Host "Built files:"
          Get-ChildItem -Recurse dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
